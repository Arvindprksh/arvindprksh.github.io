---
layout: post
title: New Command Of LINUX
subtitle: Command about SSD 
category: SSD (Solid State Drives)
tags: [summary]
permalink: /2017/01/11/New_Command_In_LINUX/
bigimg: 
  - "/img/Image/BigImages/stanford_dish.jpg" : "Stanford Dish, CA (2016)"
---

## stty
   
  this command is for data transfer like etera term, 
  
  In other words, IF you read information of device using usb cable. You need to set port. 
  
  At that time. You probable need this command. 
  
  you can see simple example on [stackoverflow](http://stackoverflow.com/questions/9092791/set-stty-parameters)
  
  **You want to have a conversatin with Device using USB cable serial communication, I recommand this command you.**
  
```shell
stty -F $(/dev/tty or /dev/ttyUSB) 38400 line 0 min 1 time 5 ignbrk -brkint -icrnl -imaxbel \
        -opost -onlcr -isig -icanon -iexten -echo -echoe -echok -echoctl \
        -echoke
```

  let's see the code under some situation. 
  
### Option  
  
(-F, --file=DEVICE) : Open and use the specified DEVICE instead of stdin. 

### Special settings

(38400(N) ) : Set the input and output speeds to N [bauds](http://www.computerhope.com/jargon/b/baud.htm) (baud in tera term)

(line 0(N) ) : use line discipline N

(min 1(N) ) : with **-icanon**, set N charaters minimum for a completed read

(time 5(N) ) : with **-icanon**, set read timeout of N tenths a second

### Input settings

(ignbrk) : ignore break chararters. 

(-brkint) : breaks cause an interrupts signal. 

(-incrnl) : translate  carriage return to newline.

(-imaxbel) : beep and do not flush a full input buffer on a character. 

### Output Settings

(-opost) :  postprocess output

(-onlcr) : translate newline to carriage return-newline.

### local Setting

(-isig) : enable interrupt, quit, and suspend special charaters. 

(-icanon) : enable erase, kill, werase, and rprnt specail charaters. 

(-iexten) : enable non-Posix special characters

(-echo) : echo input charaters. 

(-echoe) : same as [-]crterase

(-ehcok) : echo a newline after a kill charater

(-echoctl) : same as [-]ctlecho

(-echoke) : same as [-]crterase


So simply, let's put you into situation when you try to get log with the above option. 

cat $(/dev/tty or /dev/ttyUSB) | \
while IFS= read -r line
do
    // put time or something before putting log
done > log file variable

```shel
$ echo $line
              --> blank line
```

if you want to print time 

```shell
time=$(date +"%Y-%m-%d %H:%M:%S.%N")
"[${time:0:$((${#time}-6))}]"
```

# [tr](http://www.computerhope.com/unix/utr.htm) 

  the **tr** command automatically translates(subtitutes, or maps) one set of characters to another. 

  if you want a example, see [this site](https://en.wikipedia.org/wiki/Tr_%28Unix%29)
  
  let's see the simple example.
  
  and The d flag causes tr to delete all tokens of the specified set of characters from its input, in this case, only a singly caracter set argument is used. the following command removes carriage return charaters like this :
    
```
tr -d '\r'
```
  
  

## lspci

  lspci command shows you what pci is conneted with server(computer)
  
### lspci -t
 
  lspci -t make some result of lspci to tree structure
  
  if you add -v option, the verbose option display detailed information about all devices. 
  
  lspci -vt
  
  additionally, if you want to cut tree. 
  
  lspci -t | cut -c110- 

  cut -c(column) option, from the entire tree.
 
``` shell
$ lspci -t | cut -c110- | more











+-04.0-[8a]--
+-08.0-[8b]--
+-0c.0-[8c]--
+-0d.0-[8d-af]----00.0-[8e-af]--+-01.0-[8f-95]----00.0-[90-95]--+-01.0-[91]----00.0
|                               |                               +-02.0-[92]----00.0
|                               |                               +-08.0-[93]--
|                               |                               +-09.0-[94]----00.0
|                               |                               \-0a.0-[95]----00.0
|                               +-04.0-[96]--
|                               +-08.0-[97-9d]----00.0-[98-9d]--+-01.0-[99]----00.0
|                               |                               +-02.0-[9a]----00.0
|                               |                               +-08.0-[9b]--
|                               |                               +-09.0-[9c]----00.0
|                               |                               \-0a.0-[9d]----00.0
|                               +-09.0-[9e-a4]----00.0-[9f-a4]--+-01.0-[a0]----00.0
|                               |                               +-02.0-[a1]----00.0
|                               |                               +-08.0-[a2]--
|                               |                               +-09.0-[a3]----00.0
|                               |                               \-0a.0-[a4]----00.0
|                               +-0c.0-[a5]--
|                               +-10.0-[a6-ac]----00.0-[a7-ac]--+-01.0-[a8]----00.0
|                               |                               +-02.0-[a9]----00.0
|                               |                               +-08.0-[aa]--
|                               |                               +-09.0-[ab]----00.0
|                               |                               \-0a.0-[ac]----00.0
|                               +-11.0-[ad]--
|                               +-14.0-[ae]--
|                               \-15.0-[af]--
+-10.0-[b0-d2]----00.0-[b1-d2]--+-01.0-[b2]--
|                               +-04.0-[b3]--
|                               +-05.0-[b4]--

```
  
  BUT just if you want to cut column, you don't need to use the **| more** command 
  
  As you can see the above figure, If you want to remove the blank on the result. 
  
  do it like this. 
  
  lspci -t | cut -c110- | grep -v ^$

```shell
lspci -t | cut -c110- | grep -v ^$
+-04.0-[8a]--
+-08.0-[8b]--
+-0c.0-[8c]--
+-0d.0-[8d-af]----00.0-[8e-af]--+-01.0-[8f-95]----00.0-[90-95]--+-01.0-[91]----00.0
|                               |                               +-02.0-[92]----00.0
|                               |                               +-08.0-[93]--
|                               |                               +-09.0-[94]----00.0
|                               |                               \-0a.0-[95]----00.0
|                               +-04.0-[96]--
|                               +-08.0-[97-9d]----00.0-[98-9d]--+-01.0-[99]----00.0
|                               |                               +-02.0-[9a]----00.0
|                               |                               +-08.0-[9b]--
|                               |                               +-09.0-[9c]----00.0
|                               |                               \-0a.0-[9d]----00.0
|                               +-09.0-[9e-a4]----00.0-[9f-a4]--+-01.0-[a0]----00.0
|                               |                               +-02.0-[a1]----00.0
|                               |                               +-08.0-[a2]--
|                               |                               +-09.0-[a3]----00.0
|                               |                               \-0a.0-[a4]----00.0
|                               +-0c.0-[a5]--
|                               +-10.0-[a6-ac]----00.0-[a7-ac]--+-01.0-[a8]----00.0
|                               |                               +-02.0-[a9]----00.0
|                               |                               +-08.0-[aa]--
|                               |                               +-09.0-[ab]----00.0
|                               |                               \-0a.0-[ac]----00.0
|                               +-11.0-[ad]--
|                               +-14.0-[ae]--
|                               \-15.0-[af]--
+-10.0-[b0-d2]----00.0-[b1-d2]--+-01.0-[b2]--
|                               +-04.0-[b3]--
|                               +-05.0-[b4]--
|                               +-08.0-[b5-bb]----00.0-[b6-bb]--+-01.0-[b7]----00.0
|                               |                               +-02.0-[b8]----00.0
|                               |                               +-08.0-[b9]--
|                               |                               +-09.0-[ba]----00.0
|                               |                               \-0a.0-[bb]----00.0
|                               +-0c.0-[bc]--
|                               +-0d.0-[bd]--
|                               +-10.0-[be-c4]----00.0-[bf-c4]--+-01.0-[c0]----00.0
|                               |                               +-02.0-[c1]----00.0
|                               |                               +-08.0-[c2]--
|                               |                               +-09.0-[c3]----00.0
|                               |                               \-0a.0-[c4]----00.0
|                               +-14.0-[c5-cb]----00.0-[c6-cb]--+-01.0-[c7]----00.0
|                               |                               +-02.0-[c8]----00.0
|                               |                               +-08.0-[c9]--
|                               |                               +-09.0-[ca]----00.0
|                               |                               \-0a.0-[cb]----00.0
|                               \-15.0-[cc-d2]----00.0-[cd-d2]--+-01.0-[ce]----00.0
|                                                               +-02.0-[cf]----00.0
|                                                               +-08.0-[d0]--
|                                                               +-09.0-[d1]----00.0
|                                                               \-0a.0-[d2]----00.0
+-11.0-[d3]--
+-14.0-[d4]--
\-15.0-[d5]--
```
  
  -v ^$ means erasing the blank.
 
## window key + ↑

  this makes terminal window big like the entire window

##  window key + ↓

  this makes terminal window small like the orginal size. 
  
## [nvme list](https://github.com/linux-nvme/nvme-cli/blob/master/Documentation/nvme-list.txt)

  I think this command is not default on LINUX, BUT If YOU install nvme-cli(open source tool), You can use it. 
 
```shell
  $ nvme list 
```

  and then you can check the list of nvme. 
  
  For example
  
``` 
  Node      SN      Model       Version     Nmaesapce       Usage     Format      FW Rev. 
  -----    -----    ------      -------     -----------     --------  ---------   ---------
```

  -- I think this is so simple, but If you change the open source, you can get much information. 
  
## [nvme smart-log /dev/nvme0n1](https://github.com/linux-nvme/nvme-cli#alpinelinux)

  When I have to calculate WAF, of course, You can use [teraterm](https://ttssh2.osdn.jp/index.html.en), that is you need window and usb cable. 
  
  But just if you have linux machine, it easy to use nvme-cli tool with the following command. 
  
```shell
  $ nvme smart-log /dev/nvme0n1  
```

  in my test on Centos 7
 
```
# in my nvme-cli folder

$ sudo ./nvme smart-log /dev/nvme0n1
Smart Log for NVME device:nvme0n1 namespace-id:00000000
critical_warning                    : 0
temperature                         : 0 C
available_spare                     : 0%
available_spare_threshold           : 0%
percentage_used                     : 0%
data_units_read                     : 0
data_units_written                  : 0
host_read_commands                  : 0
host_write_commands                 : 0
controller_busy_time                : 0
power_cycles                        : 0
power_on_hours                      : 00
unsafe_shutdowns                    : 0
media_errors                        : 0
num_err_log_entries                 : 0
Warning Temperature Time            : 0
Critical Composite Temperature Time : 0
Temperature Sensor 1                : 0 C
Temperature Sensor 2                : 0 C
Temperature Sensor 3                : 0 C
Temperature Sensor 4                : 0 C
Temperature Sensor 5                : 0 C
Temperature Sensor 6                : 0 C
```

  as I can say, it is easy to get the result rather than tera term
  
  in tera term 
  
```
  smartdbg 0(option number)
```
  
  this is too much cost
  
 ### More extensible case with grep on smart-log
 
  In other words, see [his site](http://unix.stackexchange.com/questions/37313/how-do-i-grep-for-multiple-patterns)
 
 ```shell 
 $ sudo ./nvme smart-log /dev/nvme0n1 | grep 'data_units_written\|host_write_commands'
data_units_written                  : 0
host_write_commands                 : 0 
 ```
 
  
