---
layout: post
title: How to use Tag and category cloud in Jekyll
subtitle: How can I make the tag  and category cloud without plugin ?
category: Web Programming
tags: [jekyll]
permalink: /2016/12/17/Tag_Cloud/
bigimg: 
  - "/img/Image/BigImages/stanford_dish.jpg" : "Stanford Dish, CA (2016)"
---
 
 ## Tag Cloud
 
   ![](/img/Image/WebProgramming/2016-12-17-Tag_Cloud/word cloud.png)
   
   As you can see the above image, I will make it for my gitpage for me to search for my posts.
   
   But My tag cloude is not fancy like the above thing, I'm not expert of web developing. 
   
   I am newbie, but as software engineer, because I need to that functionality, I will try to make it. 
   
   if you can make tag cloud, you also can make category cloud. the logic is the same. 
 
   GitHub builds Jekyll sites with safe option which allows only a few plugs (such as sitemap) to be include 
   
   One distinct feature of cloud is how to fit the size of tag, according to the number of posts that are marked with that tag
   
   first, let's see front matter of jekyll post 
   
 ```markdown 
 ---
 layout: post
 title: ~~~~~~~~
 subtitle: ~~~~~~~~
 category: Web programming
 tags: jekyll
 ---
 ```

   As you can see the above, when we make tag cloud. we use the tags(jekyll) 
   
   Keep in mind, when you have to specify tags on your posts, if you want to generate tag cloud. 
   
   let's see how to generate tags cloud! 
   
   below is example code. 
   
```markdown
{% assign tags = site.tags | sort %}
{% for tag in tags %}
 <span class="site-tag">
    <a href="/tag/{{ tag | first | slugify }}/"
        style="font-size: {{ tag | last | size  |  times: 4 | plus: 80  }}%">
            {{ tag[0] | replace:'-', ' ' }} ({{ tag | last | size }})
    </a>
</span>
{% endfor %}
```
   if you make page(.html, .md) with the above code, you can see the word cloud like this 
   
   ![](/img/Image/WebProgramming/2016-12-17-Tag_Cloud/Word cloud example.png)
   
```markdown
{% assign tags = site.tags | sort %}
```
   this code is tags variable get sorted tags in your posts. 
  
   On the above code, If you change a portion :
   
```markdown   
   <a href="/tag/{{ tag | first | slugify }}/" -->  <a href="/tag/{{ tag | first | slugize }}/"
```
   tags will appear vertically unlike the above image. 
   
   that is becuase of <il></il>.
   
```markdown   
{% for tag in site.tags %}
    <li style="font-size: {{ tag | last | size | times: 4 | plus: 80 }}%">
        <a href="/{{ tag | first | slugize }}/">
            {{ tag | first }}
        </a>
    </li> 
{% endfor %} 
```   
   
   And this part is to fit the size of tag with the number of posts.
   
```markdwon 
   style="font-size: {{ tag | last | size  |  times: 4 | plus: 80  }}%">
```
   this portion adjusts the size of font automatically.
   
   And another way exist. let's see below
   
``` markdown 
{{ tag | last | size | times: 100 | divided_by: site.tag.size | plus: 70 }}
```

  Excatly I don't know what is differenct between two cases. 
  
  If you know about that, let me know what is different between both cases.
 
  I seriously will appreciate it !!
  
  Now you can make frame of tag cloud, In the above code, If you change the tags into categories. 
  
  that is category cloud as follows
  
```
{% assign categories = site.categories | sort %}
{% for category in categories %}
 <span class="site-tag">
    <a href="/category/{{ category | first | slugify }}/"
        style="font-size: {{ category | last | size  |  times: 4 | plus: 80  }}%">
            {{ tag[0] | replace:'-', ' ' }} ({{ category | last | size }})
    </a>
</span>
{% endfor %}
```

  From now on, I will explain to you how to integrate this tags cloud with making a list based on the number of tags
  
  First let's see [my example]("{{ site.baseurl }}/alistofcategories").
  
  The example is based on Categories. I will explain to you how to generate my exaple page with categories. 
  
  **BUT** if you want to have tags cloud, Just change categories into tags.
  
  let's see my code for categories cloud. 
  
  First of all, you have to make page to generate cloud of categories or tags. 
  
  Second of all, You have to copy and paste the code below. 
  
  <script src="https://gist.github.com/hyunyoung2/5a205be4f7456ad75597e6bc8ffbd279.js"></script>
  
  the above code is key to make cloud of categories. 
  
  ** if you want to change the above code into use of tags**
  
  You have to amend the following :
 
```ruby
{% assign tags = site.categories | sort %} ---> {% assign tags = site.tags | sort %}
```
  for tags cloud, that's it! it's awewsome.
  
  From now on, I explain to you my code. 
  
  First of all, Cloud of categories. 
  
{% highlight ruby linenos %}  
  <div class="blog-tags"> 
    {% assign tags = site.categories | sort %}
    {% for tag in tags %}
    <a href="#{{ tag[0] | slugify }}" class="btn btn-default" style="font-size: {{ tag | last | size  |  times: 4 | plus: 80  }}%">
      <span class="fa fa-folder-open"> <!-- I get rid of left option -->
        {{ tag[0] }} <i class="badge">{{ tag | last | size }}</i>
      </span>
    </a>
    {% endfor %}
  </div>  
{% endhighlight %}

   As you can see the code, In order to resize categories with the number of categories. 
   
   I added style option, when the number of categories increase, the size of font-size of the categries is incremented.
   
```html
style="font-size: {{ tag | last | size  |  times: 4 | plus: 80  }}%"
```
  this portion is important to resize the category icon.
  
  And the rest of my code is used to make a list for each categries.
  
{% highlight ruby linenos %}  
  <div class="post-preview" style="margin-top: 5px; margin-bottom: 30px;"> 
    {% for tag in tags %}
      <h2 id="{{ tag[0] | slugify }}"> {{ tag[0] }}  <i class="badge">{{ tag | last | size }}</i></h2> <!-- I added new class -->
      <ul class="later on"> <!-- post-subtitle -->
        {% for post in tag[1] %}
          <a class="post-subtitle" href="{{ site.baseurl }}{{ post.url }}">
        <li>
          {{ post.title }}
        <small class="post-meta"> - Posted on {{ post.date | date: "%B %-d, %Y" }}</small>
        </li>
        </a>
        {% endfor %}
      </ul>
        <a href="#top" class="btn btn-default" style="font-size: 15px; padding: 0px 5px;">
          <span class="fa fa-refresh"></span> Go back to the top
        </a> 
        <hr/>
    {% endfor %}
  </div>
{% endhighlight %}

   As you can see the code, the above code shows you how to list items of categories with for statement. 
   
   the following code is example of using the above.
   
   ![](/img/Image/WebProgramming/2016-12-17-Tag_Cloud/category example.png)
   
## Information of terminolgy

### What is the site map ?

### Liquid markups


## Reference
  
 - [Generating Tag Cloud on Jekyll blog without plugin](https://superdevresources.com/tag-cloud-jekyll/)
 
 - [Jekyll tag cloud](http://vvv.tobiassjosten.net/jekyll/jekyll-tag-cloud/)
